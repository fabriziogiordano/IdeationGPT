---
import type { SlugAudiences, PainPoint } from "~/types";

import Layout from "~/layouts/Layout.astro";
import Container from "~/layouts/Container.astro";
import Main from "~/layouts/Main.astro";
import Aside from "~/layouts/Aside.astro";

import Solution from "~/components/Solution.astro";

import { runQuery } from "~/libs/query";

export async function getStaticPaths() {
  const audiences = await runQuery("audiences");
  const slug: SlugAudiences[] = [];
  for (const audience of audiences) {
    slug.push({
      params: {
        audiences: audience.slug,
      },
      props: {
        ...audience,
      },
    });
  }

  return slug;
}

const audience = Astro.props;

const data: PainPoint[] = [];

const pain_points = await runQuery("pain_points", { audience_id: audience.id });
for (const pain_point of pain_points) {
  const solutions = await runQuery("solutions", { audience_id: audience.id, pain_point_id: pain_point.id });

  data.push({
    ...pain_point,
    solutions,
  });
}
---

<Layout title="Welcome" description="BASE">
  <Container>
    <Main>
      <h1>
        <a href={`/${audience.slug}`}>{audience.title}</a>
      </h1>

      {
        data.map((pain_point) => (
          <section>
            <h2>
              <a href={`/${audience.slug}/${pain_point.slug}`}>{pain_point.title}</a>
            </h2>
            <p>{pain_point.description}</p>
            <ul>
              {pain_point.solutions.map((solution) => {
                return <Solution audience={audience} pain_point={pain_point} solution={solution} />;
              })}
            </ul>
          </section>
        ))
      }
    </Main>
    <Aside title="Sidebar">Some nice stats here would be great</Aside>
  </Container>
</Layout>
