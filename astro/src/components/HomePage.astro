---
import type { DataItem, PainPoint } from "~/types";

import Solution from "~/components/Solution.astro";

import { runQuery } from "~/libs/query";

const data: DataItem[] = [];

const audiences = await runQuery("audiences");
for (const audience of audiences) {
  const pain_points_temp: PainPoint[] = [];
  const pain_points = await runQuery("pain_points", { audience_id: audience.id });
  for (const pain_point of pain_points) {
    const solutions = await runQuery("solutions", { audience_id: audience.id, pain_point_id: pain_point.id });
    pain_points_temp.push({
      ...pain_point,
      solutions,
    });
  }
  data.push({
    ...audience,
    pain_points: pain_points_temp,
  });
}
---

{
  data.map((audience) => {
    console.log(audience);
    return (
      <>
        <h1>
          <a href={`/${audience.slug}`}>{audience.title}</a>
        </h1>

        {audience.pain_points.map((pain_point) => {
          return (
            <>
              <h2>
                <a href={`/${audience.slug}/${pain_point.slug}`}>Pain point: {pain_point.title}</a>
              </h2>
              {pain_point.solutions.map((solution) => {
                return <Solution audience={audience} pain_point={pain_point} solution={solution} />;
              })}
            </>
          );
        })}
      </>
    );
  })
}
